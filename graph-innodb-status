#!/usr/bin/perl -w
#
# Copyright 2014 (c) Kolbe Kegel
#
# Author: Kolbe Kegel <kolbe@kolbekegel.com>
#
# This file is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the
# Free Software Foundation, version 2.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 51
# Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

use strict;
use Data::Dumper;
#use DateTime;
require "innotop";
my $innodb_parser = new InnoDBParser;


my $mysql_version = '5.6.16';

my @interests = (
    {section => 'ro', item => 'ins_sec', name => 'inserts/s'},
    {section => 'bp', item => 'buf_free', name => 'buffer pool free pages'},
    {section => 'bp', item => 'page_reads_sec', name =>  'buffer pool reads/s'},
    #{section => 'io', item => 'writes_s', name =>  'io writes/s'},
    {section => 'io', item => 'reads_s', name =>  'io reads/s', offset => '200'},
    #{section => 'lg', item => 'log_ios_s', name =>  'log ios/s'}
);

my $status_count=0;
my $complete_status = 2;
my $contents='';

print "{\n";
print '"graph_options": {"explorer": {}, "height": 600, "chartArea": {"width": "100%", "height": "80%"}, "legend": {"position": "bottom"}, "pointSize": 1},'."\n";
print '"graph_data": {"cols": [{"id": "time", "label": "timestamp", "type": "datetime"},';
print join ",", map {sprintf '{"id": "%s/%s", "label": "%s", "type": "number"}', $_->{section}, $_->{item}, $_->{name} . (defined $_->{offset} ? (" (+".$_->{offset}.")") : "")} @interests;
print "],\n\"rows\": [";

while (<STDIN>) {
    next if $complete_status==2 and not /^=====================================$/;
    $complete_status=0 if $complete_status==2 and /^=====================================$/;
         
    $contents.=$_;

    if ($complete_status==1) {
        my $innodb_status = $innodb_parser->parse_status_text(
            $contents,
            0,
            # Omit the following parameter to get all sections.
            undef,#{  tx => 0 },
            0,
            $mysql_version
        );
    #    if ($innodb_status->{sections}->{bp}->{buf_free} < 8200) {
            $Data::Dumper::Indent = 2;
            #print Dumper $innodb_status;
            print "," if $status_count;
            my $ts = $innodb_status->{ts};
=pod
            my $d = DateTime->new(
                year => $ts->[0], 
                month => $ts->[1], 
                day => $ts->[2], 
                hour => $ts->[3],
                minute => $ts->[4], 
                second => $ts->[5]);
            #printf '{"c":[{"v": %i}, ', $d->epoch;
=cut
            printf '{"c":[{"v": "Date(%i, %i, %i, %i, %i, %i)"}, ', $ts->[0], $ts->[1]-1, $ts->[2], $ts->[3], $ts->[4], $ts->[5];

            print join ",", map { sprintf '{"v": %i}', $innodb_status->{sections}->{$_->{section}}->{$_->{item}} + ($_->{offset} // 0) } @interests;
            print "]}\n";
    #    }

        $complete_status=2;
        $contents='';
        $status_count++;
    }

    $complete_status = 1 if /^============================$/;

}

print "]}}\n";
